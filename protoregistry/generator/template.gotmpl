// Code generated by 'go run github.com/streamingfast/firehose-core/protoregistry/generator well_known.go protoregistry', DO NOT EDIT!
package {{.Package}}

import (
	"fmt"
	"encoding/hex"

	"github.com/jhump/protoreflect/desc"
	"google.golang.org/protobuf/proto"
	"google.golang.org/protobuf/types/descriptorpb"
)


var WellKnownRegistry = New()

func init() {
	protoFiles := []string{
		{{- range .ProtoFiles}}

		// {{.Name}} ({{.BufRegistryPackageURL}})
		"{{.Data | toHex}}",
   		{{- end}}
	}

	var files []*descriptorpb.FileDescriptorProto
	for _, protoFile := range protoFiles {
		files = append(files, mustProtoToFileDescriptor(protoFile))
	}

	fdmap, err := desc.CreateFileDescriptors(files)
	if err != nil {
		panic(fmt.Errorf("failed to create file descriptor map: %w", err))
		return
	}

	for _, fd := range fdmap {
		WellKnownRegistry.RegisterFileDescriptor(fd)
	}
}

func mustProtoToFileDescriptor(in string) *descriptorpb.FileDescriptorProto {
	protoBytes, err := hex.DecodeString(in)
	if err != nil {
		panic(fmt.Errorf("failed to hex decode payload: %w", err))
	}
	out := &descriptorpb.FileDescriptorProto{}
	if err := proto.Unmarshal(protoBytes, out); err != nil {
		panic(fmt.Errorf("failed to unmarshal file descriptor: %w", err))
	}
	return out
}
